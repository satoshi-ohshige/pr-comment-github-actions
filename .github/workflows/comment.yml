on:
  issue_comment:
    types: [created, edited]

env:
  ALLOWED_ENVIRONMENT_LIST: X,Y,Z

jobs:
  comment:
    # PRコメントであり且つ /comment で始まるときのみ動作させる
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/comment')
    runs-on: ubuntu-latest

    steps:
      - name: Get target environment
        id: get-environment
        run: echo "::set-output name=target_environment::$(echo ${{ github.event.comment.body }} | cut -d ' ' -f 2)"

      - name: Validate parameter & Notify if invalid
        env:
          TARGET_ENVIRONMENT: ${{ steps.get-environment.outputs.target_environment }}
        uses: actions/github-script@v5
        with:
          script: |
            const { ALLOWED_ENVIRONMENT_LIST, TARGET_ENVIRONMENT } = process.env

            if (ALLOWED_ENVIRONMENT_LIST.split(',').includes(TARGET_ENVIRONMENT)) {
                return true
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "failed :thinking: \nusage: `/comment [" + ALLOWED_ENVIRONMENT_LIST + "]`"
            })

            return false

      - name: Stop if invalid
        if: steps.verify-environment.outputs.result == 'false'
        run: exit 1

      - name: Fetch target branch
        id: target-branch
        uses: actions/github-script@v5
        with:
          script: |
            const pull_request = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            return {
              url: pull_request.data.html_url,
              state: pull_request.data.state,
              title: pull_request.data.title,
              user: pull_request.data.user.login,
              branch: pull_request.data.head.ref,
              sha: pull_request.data.head.sha,
              base: pull_request.data.base.ref
            }

      - name: Run
        run: echo "${{ fromJSON(steps.target-branch.outputs.result).url }}"

      - name: Finished
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "done :rocket: \nsha:${{fromJSON(steps.target-branch.outputs.result).sha}}"
            })
